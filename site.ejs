<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.3.0/dist/chart.umd.min.js"></script>
    <title>Document</title>
</head>

<body>
    <div style="display: flex; gap: 20px;">
        <div style="width: 800px"><canvas id="lineChart"></canvas></div>
        <div style="width: 300px;"><canvas id="pieChart"></canvas></div>
    </div>
    <div style="width: 800px"><canvas id="barChart"></canvas></div>

    <script>
        const data = JSON.parse('<%- JSON.stringify(data) %>')

        let chart = new Chart(
            document.getElementById("lineChart").getContext("2d"),
            {
                type: "line",
                data: {
                    labels: data.months.map((row) => row.month),
                    datasets: [
                        {
                            label: "Distance",
                            data: data.months.map((row) => row.distance / 1000),
                            yAxisID: "y",
                            tension: .4,
                            cubicInterpolationMode: "monotone"
                        },
                        {
                            label: "Total runs",
                            data: data.months.map((row) => row.totalRuns),
                            yAxisID: "y1",
                            tension: .4,
                            cubicInterpolationMode: "monotone"
                        }
                    ]
                },
                options: {
                    scales: {
                        y: {
                            min: 0,
                            max: Math.max(...data.months.map(row => row.distance)) / 1000 * 1.2,
                            position: "left",
                            title: {
                                display: true,
                                text: "km"
                            }
                        },
                        y1: {
                            min: 0,
                            max: Math.max(...data.months.map(row => row.totalRuns)) * 1.2,
                            position: "right"
                        }
                    },
                    interaction: {
                        mode: 'index',
                        intersect: false,
                    },
                    stacked: false
                },
            }
        );



        const lastMonthRuns = data.months[data.months.length - 1].runs;
        new Chart(
            document.getElementById("barChart").getContext("2d"),
            {
                type: "bar",
                data: {
                    labels: lastMonthRuns.map((row) => row.name),
                    datasets: [
                        {
                            label: "Distance",
                            data: lastMonthRuns.map((row) => row.distance / 1000),
                            yAxisID: "y"
                        },
                        {
                            label: "Moving time",
                            data: lastMonthRuns.map((row) => row.moving_time / 60),
                            yAxisID: "y1"
                        }
                    ]
                },
                options: {
                    scales: {
                        y: {
                            min: 0,
                            max: Math.max(...lastMonthRuns.map(row => row.distance)) / 1000 * 1.2,
                            position: "left"
                        },
                        y1: {
                            min: 0,
                            max: Math.max(...lastMonthRuns.map(row => row.moving_time / 60)) * 1.2,
                            position: "right"
                        }
                    },
                    interaction: {
                        mode: 'index',
                        intersect: false,
                    },
                    stacked: false
                },
            }
        );

        new Chart(
            document.getElementById("pieChart").getContext("2d"),
            {
                type: "pie",
                data: {
                    labels: Object.keys(data.data.run_types),
                    datasets: [
                        {
                            label: "Runs",
                            data: Object.values(data.data.run_types)
                        }
                    ]
                }
            }
        );
    </script>
</body>

</html>